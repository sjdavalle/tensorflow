FROM ubuntu:16.04

RUN apt-get update && apt-get install -y --no-install-recommends \
    apt-utils \
    autoconf \
    build-essential \
    bzip2 \
    capnproto \
    libcapnp-dev \
    clang \
    cmake \
    cppcheck \
    curl \
    ffmpeg \
    git \
    libarchive-dev \
    libbz2-dev \
    libcurl4-openssl-dev \
    libeigen3-dev \
    libffi-dev \
    libglew-dev \
    libgles2-mesa-dev \
    libglfw3-dev \
    libglib2.0-0 \
    liblzma-dev \
    libomp-dev \
    libopencv-dev \
    libssl-dev \
    libsqlite3-dev \
    libusb-1.0-0-dev \
    libczmq-dev \
    libzmq3-dev \
    locales \
    ocl-icd-libopencl1 \
    ocl-icd-opencl-dev \
    opencl-headers \
    python-dev \
    python-pip \
    sudo \
    wget \
    g++ \
    unzip \
    zip \    
    gnupg \
  && rm -rf /var/lib/apt/lists/*

RUN curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --dearmor > bazel.gpg
RUN echo "deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8" | tee /etc/apt/sources.list.d/bazel.list \
  && curl https://bazel.build/bazel-release.pub.gpg | apt-key add -

RUN apt-get update \
  && apt-get install -y bazel-3.1.0 \
  && rm -rf /var/lib/apt/lists/* && \
  sudo ln -s /usr/bin/bazel-3.1.0 /usr/bin/bazel

RUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && locale-gen
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8

RUN curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash
ENV PATH="/root/.pyenv/bin:/root/.pyenv/shims:${PATH}"

RUN pyenv install 3.8.2 && \
    pyenv global 3.8.2 && \
    pyenv rehash

RUN apt-get update \
  && apt-get install -y \
  python3-dev \
  python3-pip \
  && rm -rf /var/lib/apt/lists/*

RUN pip install -U --user pip six 'numpy<1.19.0' wheel setuptools mock 'future>=0.17.1' && \
    pip install -U --user keras_applications --no-deps && \
    pip install -U --user keras_preprocessing --no-deps


RUN git clone https://github.com/tensorflow/tensorflow && \
    cd tensorflow/ && \
    git checkout r2.3

WORKDIR /tensorflow

ENV PYTHON_BIN_PATH="/root/.pyenv/versions/3.8.2/bin/python3" \
    #PYTHON_BIN_PATH="/usr/bin/python" \
    #PYTHON_LIB_PATH="/usr/local/lib/python2.7/dist-packages" \
    PYTHON_LIB_PATH="/root/.pyenv/versions/3.8.2/lib/python3.8/site-packages" \
    PYTHONPATH=/tensorflow/lib \
    PYTHON_ARG=/tensorflow/lib \
    USE_BAZEL_VERSION=0.26.1 \
    TF_NEED_CUDA=0 \
    TF_NEED_GCP=0 \
    TF_CUDA_COMPUTE_CAPABILITIES=5.2,3.5 \
    TF_NEED_HDFS=0 \
    TF_NEED_OPENCL=0 \
    TF_NEED_JEMALLOC=0 \
    TF_ENABLE_XLA=0 \
    TF_NEED_VERBS=0 \
    TF_CUDA_CLANG=0 \
    TF_DOWNLOAD_CLANG=0 \
    TF_NEED_MKL=0 \
    TF_DOWNLOAD_MKL=0 \
    TF_NEED_MPI=0 \
    TF_NEED_S3=1 \
    TF_NEED_KAFKA=0 \
    TF_NEED_GDR=0 \
    TF_NEED_OPENCL_SYCL=0 \
    TF_SET_ANDROID_WORKSPACE=0 \
    TF_NEED_AWS=0 \
    TF_NEED_IGNITE=0 \
    TF_NEED_ROCM=0 \
    TF_VERSION=2.0.1\
    GCC_HOST_COMPILER_PATH="/usr/bin/gcc" \
    CC_OPT_FLAGS="-march=native"

RUN ./configure

RUN bazel build -c opt \
            --define=grpc_no_ares=true  \
            --linkopt="-lrt" \
            --linkopt="-lm" \
            --host_linkopt="-lrt" \
            --host_linkopt="-lm" \
            --action_env="LD_LIBRARY_PATH=${LD_LIBRARY_PATH}" \
            --copt=-mavx --copt=-mavx2 --copt=-mfma --copt=-mfpmath=both \
            --copt=-w \
            --jobs=26 \
            --cxxopt="-D_GLIBCXX_USE_CXX11_ABI=0" \
            //tensorflow/tools/pip_package:build_pip_package
